DROP TABLE ALERT;
DROP SEQUENCE SEQ_MEM_NO;
DROP SEQUENCE SEQ_ALT_NO;
DROP SEQUENCE SEQ_SPR_NO;
DROP SEQUENCE SEQ_REVIEW_NO;
DROP SEQUENCE SEQ_RE_NO;
DROP SEQUENCE SEQ_PJT_NO;
DROP SEQUENCE SEQ_PA_NO;
DROP SEQUENCE SEQ_MSG_NO;
DROP SEQUENCE SEQ_MEET_NO;
DROP SEQUENCE SEQ_CRD_NO;
DROP SEQUENCE SEQ_BRD_NO;
DROP SEQUENCE SEQ_BLG_NO;
DROP TABLE SPRINT_HISTORY;
DROP TABLE REVIEW_HISTORY;
DROP TABLE REVIEW;
DROP TABLE REPLY_HISTORY;
DROP TABLE REPLY;
DROP TABLE REF_TABLE;
DROP TABLE PROJECT_HISTORY;
DROP TABLE PJT_AUTHORITY;
DROP TABLE MESSAGE;
DROP TABLE MEMBER_ATTACH;
DROP TABLE MEM_HISTORY;
DROP TABLE MEETING_ISSUE;
DROP TABLE MEETING_HISTORY;
DROP TABLE MEETING_ATTEND_LIST;
DROP TABLE MEETING;
DROP TABLE CRD_TASK_HISTORY;
DROP TABLE CRD_TASK;
DROP TABLE CRD_SCHEDULE_HISTORY;
DROP TABLE TM_HISTORY;
DROP TABLE CRD_SCH_ATTEND_HISTORY;
DROP TABLE CRD_SCH_ATTEND_LIST;
DROP TABLE CARD_HISTORY;
DROP TABLE CARD_ATTACH_HISTORY;
DROP TABLE CARD_ATTACH;
DROP TABLE CRD_SCHEDULE;
DROP TABLE CARD;
DROP TABLE BACKLOG_HISTORY;
DROP TABLE BOARD_HISTORY;
DROP TABLE BOARD;
DROP TABLE SPRINT;
DROP TABLE BACKLOG;
DROP TABLE PROJECT;
DROP TABLE MEMBER;




CREATE TABLE MEMBER
(
    MEM_ID    VARCHAR2(50) NOT NULL,
    MEM_PWD    VARCHAR2(255) NOT NULL,
    MEM_NAME    VARCHAR2(200) NOT NULL,
    PHONE    NUMBER NOT NULL,
    SIGNUP_DATE    DATE DEFAULT SYSDATE NOT NULL,
    MEM_NO    NUMBER NOT NULL,
    WITHDRAW_YN    VARCHAR2(2) DEFAULT 'N' NOT NULL
);

COMMENT ON COLUMN MEMBER.MEM_ID IS '아이디';

COMMENT ON COLUMN MEMBER.MEM_PWD IS '비밀번호';

COMMENT ON COLUMN MEMBER.MEM_NAME IS '이름';

COMMENT ON COLUMN MEMBER.PHONE IS '연락처';

COMMENT ON COLUMN MEMBER.SIGNUP_DATE IS '가입일자';

COMMENT ON COLUMN MEMBER.MEM_NO IS '회원번호';

COMMENT ON COLUMN MEMBER.WITHDRAW_YN IS '탈퇴여부';

COMMENT ON TABLE MEMBER IS '회원';

CREATE UNIQUE INDEX 엔터티1_PK ON MEMBER
( MEM_NO );

ALTER TABLE MEMBER
 ADD CONSTRAINT MEM_PK PRIMARY KEY ( MEM_NO )
 USING INDEX 엔터티1_PK;

ALTER TABLE MEMBER
 ADD CONSTRAINT MEMBER_CK CHECK ( WITHDRAW_YN IN ('Y','N') );
 
CREATE TABLE PROJECT
(
    PJT_NO    NUMBER NOT NULL,
    PJT_NAME    VARCHAR2(255) NOT NULL,
    PJT_START_DATE    DATE DEFAULT SYSDATE NOT NULL,
    PJT_DEL_YN    VARCHAR2(2) DEFAULT 'N' NOT NULL,
    MEM_NO    NUMBER NOT NULL,
    PJT_END_DATE    DATE,
    PJT_COLOR    VARCHAR2(200) NOT NULL
);

COMMENT ON COLUMN PROJECT.PJT_NO IS '프로젝트번호';

COMMENT ON COLUMN PROJECT.PJT_NAME IS '프로젝트제목';

COMMENT ON COLUMN PROJECT.PJT_START_DATE IS '시작일자';

COMMENT ON COLUMN PROJECT.PJT_DEL_YN IS '삭제여부';

COMMENT ON COLUMN PROJECT.MEM_NO IS '회원번호';

COMMENT ON COLUMN PROJECT.PJT_END_DATE IS '목표일자';

COMMENT ON COLUMN PROJECT.PJT_COLOR IS '프로젝트색상';

COMMENT ON TABLE PROJECT IS '프로젝트';

CREATE UNIQUE INDEX 엔터티1_PK1 ON PROJECT
( PJT_NO );

ALTER TABLE PROJECT
 ADD CONSTRAINT PROJECT_PK PRIMARY KEY ( PJT_NO )
 USING INDEX 엔터티1_PK1;

ALTER TABLE PROJECT
 ADD CONSTRAINT PROJECT_CK CHECK ( PJT_DEL_YN IN ('Y','N') );

ALTER TABLE PROJECT
 ADD CONSTRAINT PROJECT_FK FOREIGN KEY ( MEM_NO )
 REFERENCES MEMBER ( MEM_NO );
 
CREATE TABLE ALERT
(
    ALT_NO    VARCHAR2(255) NOT NULL,
    ALT_ENROLL_DATE    DATE NOT NULL,
    ALT_TXT    VARCHAR2(1000) NOT NULL,
    ALT_URI    VARCHAR2(1000),
    ALT_DEL_YN    VARCHAR2(2) DEFAULT 'N' NOT NULL,
    TM_NO    NUMBER NOT NULL,
    MEM_NO    NUMBER NOT NULL 
);

COMMENT ON COLUMN ALERT.ALT_NO IS '알림고유번호';

COMMENT ON COLUMN ALERT.ALT_ENROLL_DATE IS '알림일자';

COMMENT ON COLUMN ALERT.ALT_TXT IS '메세지';

COMMENT ON COLUMN ALERT.ALT_URI IS 'URI';

COMMENT ON COLUMN ALERT.ALT_DEL_YN IS '알림삭제여부';

COMMENT ON COLUMN ALERT.TM_NO IS '권한 고유 번호';

COMMENT ON COLUMN ALERT.MEM_NO IS '회원번호';

COMMENT ON TABLE ALERT IS '알림';

CREATE UNIQUE INDEX 엔터티1_PK14 ON ALERT
( ALT_NO );

ALTER TABLE ALERT
 ADD CONSTRAINT ALT_PK PRIMARY KEY ( ALT_NO )
 USING INDEX 엔터티1_PK14;

ALTER TABLE ALERT
 ADD CONSTRAINT ALT_FK FOREIGN KEY ( MEM_NO )
 REFERENCES MEMBER(MEM_NO);




CREATE TABLE BACKLOG
(
    BLG_NO    NUMBER NOT NULL,
    BLG_NAME    VARCHAR2(255) NOT NULL,
    BLG_PRI    NUMBER NOT NULL,
    BLG_ENROLL_DATE    DATE DEFAULT SYSDATE NOT NULL,
    PJT_NO    NUMBER NOT NULL,
    BLG_DEL_YN    VARCHAR2(2) DEFAULT 'N' NOT NULL,
    BLG_DEMO_MEMO    VARCHAR2(255),
    BLG_REF_MEMO    VARCHAR2(255)
);

COMMENT ON COLUMN BACKLOG.BLG_NO IS '백로그번호';

COMMENT ON COLUMN BACKLOG.BLG_NAME IS '백로그제목';

COMMENT ON COLUMN BACKLOG.BLG_PRI IS '우선순위';

COMMENT ON COLUMN BACKLOG.BLG_ENROLL_DATE IS '생성일자';

COMMENT ON COLUMN BACKLOG.PJT_NO IS '프로젝트번호';

COMMENT ON COLUMN BACKLOG.BLG_DEL_YN IS '삭제여부';

COMMENT ON COLUMN BACKLOG.BLG_DEMO_MEMO IS '데모방식';

COMMENT ON COLUMN BACKLOG.BLG_REF_MEMO IS '참고';


COMMENT ON TABLE BACKLOG IS '백로그';

CREATE UNIQUE INDEX 엔터티1_PK2 ON BACKLOG
( BLG_NO );

ALTER TABLE BACKLOG
 ADD CONSTRAINT BLG_PK PRIMARY KEY ( BLG_NO )
 USING INDEX 엔터티1_PK2;

ALTER TABLE BACKLOG
 ADD CONSTRAINT BACKLOG_CK CHECK ( BLG_PRI IN (1,2,3) );

ALTER TABLE BACKLOG
 ADD CONSTRAINT BACKLOG_FK FOREIGN KEY ( PJT_NO )
 REFERENCES PROJECT ( PJT_NO );

CREATE TABLE BACKLOG_HISTORY
(
    BLG_NO    NUMBER NOT NULL,
    BLG_NAME    VARCHAR2(255) NOT NULL,
    BLG_PRI    NUMBER NOT NULL,
    UPDATE_DATE    DATE NOT NULL,
    BLG_DEL_YN    VARCHAR2(2) DEFAULT 'N' NOT NULL,
    BLG_HIS_NO    NUMBER NOT NULL
);

COMMENT ON COLUMN BACKLOG_HISTORY.BLG_NO IS '백로그번호';

COMMENT ON COLUMN BACKLOG_HISTORY.BLG_NAME IS '백로그제목';

COMMENT ON COLUMN BACKLOG_HISTORY.BLG_PRI IS '우선순위';

COMMENT ON COLUMN BACKLOG_HISTORY.UPDATE_DATE IS '변경일자';

COMMENT ON COLUMN BACKLOG_HISTORY.BLG_DEL_YN IS '삭제여부';

COMMENT ON COLUMN BACKLOG_HISTORY.BLG_HIS_NO IS '백로그이력번호';

COMMENT ON TABLE BACKLOG_HISTORY IS '백로그변경이력';

CREATE UNIQUE INDEX 엔터티1_1_PK2 ON BACKLOG_HISTORY
( BLG_HIS_NO );

ALTER TABLE BACKLOG_HISTORY
 ADD CONSTRAINT BLG_HIS_PK PRIMARY KEY ( BLG_HIS_NO )
 USING INDEX 엔터티1_1_PK2;

ALTER TABLE BACKLOG_HISTORY
 ADD CONSTRAINT BACKLOG_HIS_FK FOREIGN KEY ( BLG_NO )
 REFERENCES BACKLOG ( BLG_NO );


CREATE TABLE SPRINT
(
    SPR_NO    NUMBER NOT NULL,
    SPR_NAME    VARCHAR2(255) NOT NULL,
    SPR_START_DATE    DATE,
    SPR_END_DATE    DATE,
    SPR_GOAL    VARCHAR2(255),
    SPR_DEL_YN    VARCHAR2(2) DEFAULT 'N' NOT NULL,
    BLG_NO NUMBER NOT NULL
);

COMMENT ON COLUMN SPRINT.SPR_NO IS '스프린트번호';

COMMENT ON COLUMN SPRINT.SPR_NAME IS '스프린트이름';

COMMENT ON COLUMN SPRINT.SPR_START_DATE IS '시작날짜';

COMMENT ON COLUMN SPRINT.SPR_END_DATE IS '종료날짜';

COMMENT ON COLUMN SPRINT.SPR_GOAL IS '스프린트목표';

COMMENT ON COLUMN SPRINT.SPR_DEL_YN IS '삭제여부';

COMMENT ON COLUMN SPRINT.BLG_NO IS '백로그번호';

COMMENT ON TABLE SPRINT IS '스프린트';

CREATE UNIQUE INDEX 엔터티1_PK20 ON SPRINT
( SPR_NO );

ALTER TABLE SPRINT
 ADD CONSTRAINT SPRINT_PK PRIMARY KEY ( SPR_NO )
 USING INDEX 엔터티1_PK20;

ALTER TABLE SPRINT
 ADD CONSTRAINT SPRINT_CK CHECK ( SPR_DEL_YN IN ('Y','N') );

ALTER TABLE SPRINT
 ADD CONSTRAINT SPRINT_FK FOREIGN KEY ( BLG_NO )
 REFERENCES BACKLOG ( BLG_NO );


CREATE TABLE BOARD
(
    BRD_NO    NUMBER NOT NULL,
    BRD_NAME    VARCHAR2(255) NOT NULL,
    BRD_ENROLL_DATE    DATE DEFAULT SYSDATE NOT NULL,
    SPR_NO    NUMBER NOT NULL,
    BRD_DEL_YN    VARCHAR2(2) DEFAULT 'N' NOT NULL,
    BRD_ORDER    NUMBER NOT NULL
);

COMMENT ON COLUMN BOARD.BRD_NO IS '보드번호';

COMMENT ON COLUMN BOARD.BRD_NAME IS '보드제목';

COMMENT ON COLUMN BOARD.BRD_ENROLL_DATE IS '생성일자';

COMMENT ON COLUMN BOARD.SPR_NO IS '스프린트번호';

COMMENT ON COLUMN BOARD.BRD_DEL_YN IS '삭제여부';

COMMENT ON COLUMN BOARD.BRD_ORDER IS '보드 순번';

COMMENT ON TABLE BOARD IS '보드';

CREATE UNIQUE INDEX 엔터티1_PK3 ON BOARD
( BRD_NO );

ALTER TABLE BOARD
 ADD CONSTRAINT BRD_PK PRIMARY KEY ( BRD_NO )
 USING INDEX 엔터티1_PK3;

ALTER TABLE BOARD
 ADD CONSTRAINT BOARD_CK CHECK ( BRD_DEL_YN IN ('Y','N') );

ALTER TABLE BOARD
 ADD CONSTRAINT BOARD_FK FOREIGN KEY ( SPR_NO )
 REFERENCES SPRINT ( SPR_NO );


CREATE TABLE BOARD_HISTORY
(
    BRD_NO    NUMBER NOT NULL,
    BRD_NAME    VARCHAR2(255) NOT NULL,
    UPDATE_DATE    DATE NOT NULL,
    BRD_HIS_NO    NUMBER NOT NULL
);

COMMENT ON COLUMN BOARD_HISTORY.BRD_NO IS '보드번호';

COMMENT ON COLUMN BOARD_HISTORY.BRD_NAME IS '보드제목';

COMMENT ON COLUMN BOARD_HISTORY.UPDATE_DATE IS '변경일자';

COMMENT ON COLUMN BOARD_HISTORY.BRD_HIS_NO IS '보드이력번호';

COMMENT ON TABLE BOARD_HISTORY IS '보드변경이력';

ALTER TABLE BOARD_HISTORY
 ADD CONSTRAINT BOARD_HISTORY_FK FOREIGN KEY ( BRD_NO )
 REFERENCES BOARD ( BRD_NO );

CREATE TABLE CARD
(
    CRD_NO    NUMBER NOT NULL,
    CRD_NAME    VARCHAR2(500) NOT NULL,
    CRD_ENROLL_DATE    DATE NOT NULL,
    CRD_DEL_NO    VARCHAR2(2) DEFAULT 'N' NOT NULL,
    BRD_NO    NUMBER NOT NULL,
    CRD_ORDER    NUMBER NOT NULL,
    CRD_TYPE    NUMBER NOT NULL,
    MEM_NO    NUMBER NOT NULL,
    CRD_TXT    VARCHAR2(4000) NOT NULL
);

COMMENT ON COLUMN CARD.CRD_NO IS '카드번호';

COMMENT ON COLUMN CARD.CRD_NAME IS '카드제목';

COMMENT ON COLUMN CARD.CRD_ENROLL_DATE IS '생성일자';

COMMENT ON COLUMN CARD.CRD_DEL_NO IS '삭제여부';

COMMENT ON COLUMN CARD.BRD_NO IS '보드번호';

COMMENT ON COLUMN CARD.CRD_ORDER IS '보드 내 순번';

COMMENT ON COLUMN CARD.CRD_TYPE IS '카드 구분';

COMMENT ON COLUMN CARD.MEM_NO IS '회원번호';

COMMENT ON COLUMN CARD.CRD_TXT IS '카드내용';

COMMENT ON TABLE CARD IS '카드';

CREATE UNIQUE INDEX 엔터티1_PK4 ON CARD
( CRD_NO );

ALTER TABLE CARD
 ADD CONSTRAINT CRD_PK PRIMARY KEY ( CRD_NO )
 USING INDEX 엔터티1_PK4;

ALTER TABLE CARD
 ADD CONSTRAINT CARD_CK1 CHECK ( CRD_DEL_NO IN ('Y','N') );

ALTER TABLE CARD
 ADD CONSTRAINT CARD_FK1 FOREIGN KEY ( BRD_NO )
 REFERENCES BOARD ( BRD_NO );

ALTER TABLE CARD
 ADD CONSTRAINT CARD_FK2 FOREIGN KEY ( MEM_NO )
 REFERENCES MEMBER ( MEM_NO );



CREATE TABLE CARD_ATTACH
(
    ATTACHMENT_NO    NUMBER NOT NULL,
    ORIGINAL_NAME    VARCHAR2(255) NOT NULL,
    SAVED_NAME    VARCHAR2(255) NOT NULL,
    SAVE_PATH    VARCHAR2(255) NOT NULL,
    FILE_TYPE    VARCHAR2(10) NOT NULL,
    THUMBNAIL_PATH    VARCHAR2(255) NOT NULL,
    CRD_NO    NUMBER NOT NULL,
    ATTACHMENT_STATUS    VARCHAR2(2) DEFAULT 'Y' NOT NULL
);

COMMENT ON COLUMN CARD_ATTACH.ATTACHMENT_NO IS '첨부파일번호';

COMMENT ON COLUMN CARD_ATTACH.ORIGINAL_NAME IS '원본이름';

COMMENT ON COLUMN CARD_ATTACH.SAVED_NAME IS '변경이름';

COMMENT ON COLUMN CARD_ATTACH.SAVE_PATH IS '저장경로';

COMMENT ON COLUMN CARD_ATTACH.FILE_TYPE IS '확장자';

COMMENT ON COLUMN CARD_ATTACH.THUMBNAIL_PATH IS '썸네일경로';

COMMENT ON COLUMN CARD_ATTACH.CRD_NO IS '카드번호';

COMMENT ON COLUMN CARD_ATTACH.ATTACHMENT_STATUS IS '첨부파일상태';

COMMENT ON TABLE CARD_ATTACH IS '카드첨부파일';

ALTER TABLE CARD_ATTACH
 ADD CONSTRAINT CARD_ATTACH_CK CHECK ( ATTACHMENT_STATUS IN ('Y','N') );

ALTER TABLE CARD_ATTACH
 ADD CONSTRAINT CARD_ATTACH_FK FOREIGN KEY ( CRD_NO )
 REFERENCES CARD ( CRD_NO );


CREATE TABLE CARD_ATTACH_HISTORY
(
    ATTACHMENT_NO    NUMBER NOT NULL,
    ORIGINAL_NAME    VARCHAR2(255) NOT NULL,
    SAVED_NAME    VARCHAR2(255) NOT NULL,
    SAVE_PATH    VARCHAR2(255) NOT NULL,
    FILE_TYPE    VARCHAR2(10) NOT NULL,
    THUMBNAIL_PATH    VARCHAR2(255) NOT NULL,
    ATTACHMENT_STATUS    VARCHAR2(2) DEFAULT 'Y' NOT NULL,
    CRD_NO    NUMBER NOT NULL,
    UPDATE_DATE    DATE DEFAULT SYSDATE NOT NULL
);

COMMENT ON COLUMN CARD_ATTACH_HISTORY.ATTACHMENT_NO IS '첨부파일번호';

COMMENT ON COLUMN CARD_ATTACH_HISTORY.ORIGINAL_NAME IS '원본이름';

COMMENT ON COLUMN CARD_ATTACH_HISTORY.SAVED_NAME IS '변경이름';

COMMENT ON COLUMN CARD_ATTACH_HISTORY.SAVE_PATH IS '저장경로';

COMMENT ON COLUMN CARD_ATTACH_HISTORY.FILE_TYPE IS '확장자';

COMMENT ON COLUMN CARD_ATTACH_HISTORY.THUMBNAIL_PATH IS '썸네일경로';

COMMENT ON COLUMN CARD_ATTACH_HISTORY.ATTACHMENT_STATUS IS '첨부파일상태';

COMMENT ON COLUMN CARD_ATTACH_HISTORY.CRD_NO IS '카드번호';

COMMENT ON COLUMN CARD_ATTACH_HISTORY.UPDATE_DATE IS '변경일자';

COMMENT ON TABLE CARD_ATTACH_HISTORY IS '카드첨부파일이력';

CREATE UNIQUE INDEX 엔터티1_1_1_PK8 ON CARD_ATTACH_HISTORY
( CRD_NO,UPDATE_DATE );

ALTER TABLE CARD_ATTACH_HISTORY
 ADD CONSTRAINT 엔터티1_1_1_PK8 PRIMARY KEY ( CRD_NO,UPDATE_DATE )
 USING INDEX 엔터티1_1_1_PK8;

ALTER TABLE CARD_ATTACH_HISTORY
 ADD CONSTRAINT CARD_ATTACH_HISTORY_CK CHECK ( ATTACHMENT_STATUS IN ('Y','N') );



CREATE TABLE CARD_HISTORY
(
    UPDATE_DATE    DATE NOT NULL,
    CRD_TYPE    NUMBER NOT NULL,
    CRD_NO    NUMBER NOT NULL,
    CRD_TITLE    VARCHAR2(500),
    CRD_DEL_YN    VARCHAR2(2) DEFAULT 'N',
    CRD_ORDER    NUMBER NOT NULL,
    CRD_TXT    VARCHAR2(4000) NOT NULL
);

COMMENT ON COLUMN CARD_HISTORY.UPDATE_DATE IS '변경일자';

COMMENT ON COLUMN CARD_HISTORY.CRD_TYPE IS '카드 구분';

COMMENT ON COLUMN CARD_HISTORY.CRD_NO IS '카드번호';

COMMENT ON COLUMN CARD_HISTORY.CRD_TITLE IS '카드 제목';

COMMENT ON COLUMN CARD_HISTORY.CRD_DEL_YN IS '삭제 여부';

COMMENT ON COLUMN CARD_HISTORY.CRD_ORDER IS '보드 내 순번';

COMMENT ON COLUMN CARD_HISTORY.CRD_TXT IS '카드내용';

COMMENT ON TABLE CARD_HISTORY IS '카드이력';

CREATE UNIQUE INDEX 엔터티1_PK8 ON CARD_HISTORY
( CRD_NO,UPDATE_DATE );

ALTER TABLE CARD_HISTORY
 ADD CONSTRAINT 엔터티1_PK8 PRIMARY KEY ( CRD_NO,UPDATE_DATE )
 USING INDEX 엔터티1_PK8;

ALTER TABLE CARD_HISTORY
 ADD CONSTRAINT CARD_HISTORY_CK CHECK ( CRD_TYPE IN (1,2,3,4) );

ALTER TABLE CARD_HISTORY
 ADD CONSTRAINT CARD_HISTORY_FK FOREIGN KEY ( CRD_NO )
 REFERENCES CARD ( CRD_NO );


CREATE TABLE CRD_SCHEDULE
(
    SCH_ALERT    NUMBER NOT NULL,
    SCH_PLACE    VARCHAR2(500) NOT NULL,
    CRD_NO    NUMBER NOT NULL,
    SCH_START_DATE    DATE NOT NULL,
    SCH_END_DATE    DATE NOT NULL
);

COMMENT ON COLUMN CRD_SCHEDULE.SCH_ALERT IS '일정 알림';

COMMENT ON COLUMN CRD_SCHEDULE.SCH_PLACE IS '일정 일정장소';

COMMENT ON COLUMN CRD_SCHEDULE.CRD_NO IS '카드번호';

COMMENT ON COLUMN CRD_SCHEDULE.SCH_START_DATE IS '일정 시작일';

COMMENT ON COLUMN CRD_SCHEDULE.SCH_END_DATE IS '일정 종료일';

COMMENT ON TABLE CRD_SCHEDULE IS '일정';

CREATE UNIQUE INDEX 엔터티1_1_PK5 ON CRD_SCHEDULE
( CRD_NO );

ALTER TABLE CRD_SCHEDULE
 ADD CONSTRAINT CRD_SCHEDULE_PK PRIMARY KEY ( CRD_NO )
 USING INDEX 엔터티1_1_PK5;

ALTER TABLE CRD_SCHEDULE
 ADD CONSTRAINT CRD_SCHEDULE_CK CHECK ( SCH_ALERT IN (1,2,3) );

ALTER TABLE CRD_SCHEDULE
 ADD CONSTRAINT CRD_SCHEDULE_FK1 FOREIGN KEY ( CRD_NO )
 REFERENCES CARD ( CRD_NO  );


CREATE TABLE CRD_SCH_ATTEND_LIST
(
    ATTEND_SIGN    NUMBER,
    CRD_NO    NUMBER NOT NULL,
    MEM_NO    NUMBER NOT NULL
);

COMMENT ON COLUMN CRD_SCH_ATTEND_LIST.ATTEND_SIGN IS '참석 여부';

COMMENT ON COLUMN CRD_SCH_ATTEND_LIST.CRD_NO IS '카드번호';

COMMENT ON COLUMN CRD_SCH_ATTEND_LIST.MEM_NO IS '회원번호';

COMMENT ON TABLE CRD_SCH_ATTEND_LIST IS '참여자 목록';

CREATE UNIQUE INDEX 엔터티2_PK ON CRD_SCH_ATTEND_LIST
( MEM_NO,CRD_NO );

ALTER TABLE CRD_SCH_ATTEND_LIST
 ADD CONSTRAINT CRD_SCH_PK PRIMARY KEY ( MEM_NO,CRD_NO )
 USING INDEX 엔터티2_PK;

ALTER TABLE CRD_SCH_ATTEND_LIST
 ADD CONSTRAINT CRD_SCH_ATTEND_LIST_CK CHECK ( ATTEND_SIGN IN (1,2,3) );


ALTER TABLE CRD_SCH_ATTEND_LIST
 ADD CONSTRAINT CRD_SCH_ATTEND_LIST_FK1 FOREIGN KEY ( CRD_NO )
 REFERENCES CRD_SCHEDULE ( CRD_NO );

ALTER TABLE CRD_SCH_ATTEND_LIST
 ADD CONSTRAINT CRD_SCH_ATTEND_LIST_FK2 FOREIGN KEY ( MEM_NO )
 REFERENCES MEMBER ( MEM_NO );

CREATE TABLE CRD_SCH_ATTEND_HISTORY
(
    ATTEND_SIGN    NUMBER,
    CRD_NO    NUMBER NOT NULL,
    UPDATE_DATE    DATE NOT NULL,
    MEM_NO    NUMBER NOT NULL
);

COMMENT ON COLUMN CRD_SCH_ATTEND_HISTORY.ATTEND_SIGN IS '참석여부';

COMMENT ON COLUMN CRD_SCH_ATTEND_HISTORY.CRD_NO IS '카드번호';

COMMENT ON COLUMN CRD_SCH_ATTEND_HISTORY.UPDATE_DATE IS '변경일자';

COMMENT ON COLUMN CRD_SCH_ATTEND_HISTORY.MEM_NO IS '회원번호';

COMMENT ON TABLE CRD_SCH_ATTEND_HISTORY IS '참여자 이력';

ALTER TABLE CRD_SCH_ATTEND_HISTORY
 ADD CONSTRAINT CRD_SCH_ATTEND_HISTORY_FK1 FOREIGN KEY ( CRD_NO,MEM_NO )
 REFERENCES CRD_SCH_ATTEND_LIST( CRD_NO,MEM_NO );




CREATE TABLE CRD_SCHEDULE_HISTORY
(
    CRD_NO    NUMBER NOT NULL,
    UPDATE_DATE    DATE NOT NULL,
    SCH_ALERT    NUMBER NOT NULL,
    SCH_PLACE    VARCHAR2(500) NOT NULL
);

COMMENT ON COLUMN CRD_SCHEDULE_HISTORY.CRD_NO IS '카드번호';

COMMENT ON COLUMN CRD_SCHEDULE_HISTORY.UPDATE_DATE IS '변경일자';

COMMENT ON COLUMN CRD_SCHEDULE_HISTORY.SCH_ALERT IS '일정 알림';

COMMENT ON COLUMN CRD_SCHEDULE_HISTORY.SCH_PLACE IS '일정 장소';

COMMENT ON TABLE CRD_SCHEDULE_HISTORY IS '일정카드이력';

ALTER TABLE CRD_SCHEDULE_HISTORY
 ADD CONSTRAINT CRD_SCHEDULE_HISTORY_FK1 FOREIGN KEY ( CRD_NO,UPDATE_DATE )
 REFERENCES CARD_HISTORY( CRD_NO,UPDATE_DATE );


CREATE TABLE CRD_TASK
(
    TK_PROGRESS    NUMBER NOT NULL,
    CRD_NO    NUMBER NOT NULL,
    MEM_NO    NUMBER NOT NULL,
    TK_START_DATE    DATE NOT NULL,
    TK_END_DATE    DATE NOT NULL
);

COMMENT ON COLUMN CRD_TASK.TK_PROGRESS IS '업무 진척도';

COMMENT ON COLUMN CRD_TASK.CRD_NO IS '카드번호';

COMMENT ON COLUMN CRD_TASK.MEM_NO IS '담당자';

COMMENT ON COLUMN CRD_TASK.TK_START_DATE IS '업무시작일';

COMMENT ON COLUMN CRD_TASK.TK_END_DATE IS '업무종료일';

COMMENT ON TABLE CRD_TASK IS '업무';

CREATE UNIQUE INDEX 엔터티1_PK5 ON CRD_TASK
( CRD_NO );

ALTER TABLE CRD_TASK
 ADD CONSTRAINT CRD_TASK_PK PRIMARY KEY ( CRD_NO )
 USING INDEX 엔터티1_PK5;

ALTER TABLE CRD_TASK
 ADD CONSTRAINT CRD_TASK_CK CHECK ( TK_PROGRESS IN (1,2,3,4,5) );

ALTER TABLE CRD_TASK
 ADD CONSTRAINT CRD_TASK_FK1 FOREIGN KEY ( CRD_NO ) 
 REFERENCES CARD( CRD_NO );


CREATE TABLE CRD_TASK_HISTORY
(
    CRD_NO    NUMBER NOT NULL,
    UPDATE_DATE    DATE NOT NULL,
    TK_PROGRESS    NUMBER NOT NULL,
    MEM_NO    NUMBER NOT NULL
);

COMMENT ON COLUMN CRD_TASK_HISTORY.CRD_NO IS '카드번호';

COMMENT ON COLUMN CRD_TASK_HISTORY.UPDATE_DATE IS '변경일자';

COMMENT ON COLUMN CRD_TASK_HISTORY.TK_PROGRESS IS '업무 진척도';

COMMENT ON COLUMN CRD_TASK_HISTORY.MEM_NO IS '담당자';

COMMENT ON TABLE CRD_TASK_HISTORY IS '업무카드이력';

ALTER TABLE CRD_TASK_HISTORY
 ADD CONSTRAINT CRD_TASK_HISTORY_FK2 FOREIGN KEY ( UPDATE_DATE,CRD_NO )
 REFERENCES CARD_HISTORY( UPDATE_DATE,CRD_NO );

CREATE TABLE MEETING
(
    MEET_NO    NUMBER NOT NULL,
    MEET_NAME    VARCHAR2(500) NOT NULL,
    MEET_TXT    VARCHAR2(4000) NOT NULL,
    MEET_ENROLL_DATE    DATE DEFAULT SYSDATE NOT NULL,
    MEET_DEL_YN    VARCHAR2(2) DEFAULT 'N' NOT NULL,
    SPR_NO    NUMBER NOT NULL
);

COMMENT ON COLUMN MEETING.MEET_NO IS '희의번호';

COMMENT ON COLUMN MEETING.MEET_NAME IS '회의제목';

COMMENT ON COLUMN MEETING.MEET_TXT IS '회의내용';

COMMENT ON COLUMN MEETING.MEET_ENROLL_DATE IS '회의일자';

COMMENT ON COLUMN MEETING.MEET_DEL_YN IS '삭제여부';

COMMENT ON COLUMN MEETING.SPR_NO IS '스프린트번호';

COMMENT ON TABLE MEETING IS '스탠드업미팅';

CREATE UNIQUE INDEX 엔터티1_PK13 ON MEETING
( MEET_NO );

ALTER TABLE MEETING
 ADD CONSTRAINT MEET_PK PRIMARY KEY ( MEET_NO )
 USING INDEX 엔터티1_PK13;

ALTER TABLE MEETING
 ADD CONSTRAINT MEETING_CK CHECK ( MEET_DEL_YN IN ('Y','N') );

ALTER TABLE MEETING
 ADD CONSTRAINT MEETING_FK FOREIGN KEY ( SPR_NO )
 REFERENCES SPRINT ( SPR_NO );


CREATE TABLE MEETING_ATTEND_LIST
(
    MEET_NO    NUMBER NOT NULL,
    MEM_NO    NUMBER NOT NULL
);

COMMENT ON COLUMN MEETING_ATTEND_LIST.MEET_NO IS '희의번호';

COMMENT ON COLUMN MEETING_ATTEND_LIST.MEM_NO IS '회원번호';

COMMENT ON TABLE MEETING_ATTEND_LIST IS '회의참석자목록';

ALTER TABLE MEETING_ATTEND_LIST
 ADD CONSTRAINT MEETING_ATTEND_LIST_FK1 FOREIGN KEY ( MEET_NO )
 REFERENCES MEETING( MEET_NO );

ALTER TABLE MEETING_ATTEND_LIST
 ADD CONSTRAINT MEETING_ATTEND_LIST_FK2 FOREIGN KEY ( MEM_NO )
 REFERENCES MEMBER ( MEM_NO );


CREATE TABLE MEETING_HISTORY
(
    MEET_NAME    VARCHAR2(500) NOT NULL,
    MEET_TXT    VARCHAR2(4000) NOT NULL,
    UPDATE_DATE    DATE NOT NULL,
    MEET_NO    NUMBER NOT NULL,
    MEET_HIS_NO    NUMBER NOT NULL
);

COMMENT ON COLUMN MEETING_HISTORY.MEET_NAME IS '회의제목';

COMMENT ON COLUMN MEETING_HISTORY.MEET_TXT IS '회의내용';

COMMENT ON COLUMN MEETING_HISTORY.UPDATE_DATE IS '변경일자';

COMMENT ON COLUMN MEETING_HISTORY.MEET_NO IS '희의번호';

COMMENT ON COLUMN MEETING_HISTORY.MEET_HIS_NO IS '미팅이력번호';

COMMENT ON TABLE MEETING_HISTORY IS '스탠드업미팅이력';

ALTER TABLE MEETING_HISTORY
 ADD CONSTRAINT MEETING_HISTORY_FK FOREIGN KEY ( MEET_NO )
 REFERENCES MEETING ( MEET_NO );


CREATE TABLE MEETING_ISSUE
(
    MEET_NO    NUMBER NOT NULL,
    CRD_NO    NUMBER NOT NULL
);

COMMENT ON COLUMN MEETING_ISSUE.MEET_NO IS '희의번호';

COMMENT ON COLUMN MEETING_ISSUE.CRD_NO IS '카드번호';

COMMENT ON TABLE MEETING_ISSUE IS '이슈리스트';

ALTER TABLE MEETING_ISSUE
 ADD CONSTRAINT MEETING_ISSUE_FK1 FOREIGN KEY ( MEET_NO )
 REFERENCES MEETING ( MEET_NO );

ALTER TABLE MEETING_ISSUE
 ADD CONSTRAINT MEETING_ISSUE_FK2 FOREIGN KEY ( CRD_NO )
 REFERENCES CARD ( CRD_NO );



CREATE TABLE MEM_HISTORY
(
    MEM_NAME    VARCHAR2(200) NOT NULL,
    PHONE    NUMBER NOT NULL,
    MEM_NO    NUMBER NOT NULL,
    UPDATE_DATE    DATE NOT NULL,
    WITHDRAW_YN    VARCHAR2(2) DEFAULT 'N' NOT NULL,
    MEM_HIS_NO    NUMBER NOT NULL
);

COMMENT ON COLUMN MEM_HISTORY.MEM_NAME IS '이름';

COMMENT ON COLUMN MEM_HISTORY.PHONE IS '연락처';

COMMENT ON COLUMN MEM_HISTORY.MEM_NO IS '회원번호';

COMMENT ON COLUMN MEM_HISTORY.UPDATE_DATE IS '변경이력';

COMMENT ON COLUMN MEM_HISTORY.WITHDRAW_YN IS '탈퇴여부';

COMMENT ON COLUMN MEM_HISTORY.MEM_HIS_NO IS '회원이력번호';

COMMENT ON TABLE MEM_HISTORY IS '개인정보변경이력';

CREATE UNIQUE INDEX 엔터티1_1_PK ON MEM_HISTORY
( MEM_HIS_NO );

ALTER TABLE MEM_HISTORY
 ADD CONSTRAINT MEM_HIS_PK PRIMARY KEY ( MEM_HIS_NO )
 USING INDEX 엔터티1_1_PK;

ALTER TABLE MEM_HISTORY
 ADD CONSTRAINT MEM_HISTORY_FK FOREIGN KEY ( MEM_NO )
 REFERENCES MEMBER ( MEM_NO );




CREATE TABLE MEMBER_ATTACH
(
    ORIGINAL_NAME    VARCHAR2(255) NOT NULL,
    SAVED_NAME    VARCHAR2(255) NOT NULL,
    SAVE_PATH    VARCHAR2(255) NOT NULL,
    FILE_TYPE    VARCHAR2(10) NOT NULL,
    THUMBNAIL_PATH    VARCHAR2(255) NOT NULL,
    ATTACHMENT_STATUS    VARCHAR2(2) DEFAULT 'Y' NOT NULL,
    MEM_NO    NUMBER NOT NULL
);

COMMENT ON COLUMN MEMBER_ATTACH.ORIGINAL_NAME IS '원본이름';

COMMENT ON COLUMN MEMBER_ATTACH.SAVED_NAME IS '변경이름';

COMMENT ON COLUMN MEMBER_ATTACH.SAVE_PATH IS '저장경로';

COMMENT ON COLUMN MEMBER_ATTACH.FILE_TYPE IS '확장자';

COMMENT ON COLUMN MEMBER_ATTACH.THUMBNAIL_PATH IS '썸네일경로';

COMMENT ON COLUMN MEMBER_ATTACH.ATTACHMENT_STATUS IS '첨부파일상태';

COMMENT ON COLUMN MEMBER_ATTACH.MEM_NO IS '회원번호';

COMMENT ON TABLE MEMBER_ATTACH IS '회원첨부파일';

ALTER TABLE MEMBER_ATTACH
 ADD CONSTRAINT MEMBER_ATTACH_CK CHECK ( ATTACHMENT_STATUS IN ('N','Y') );

ALTER TABLE MEMBER_ATTACH
 ADD CONSTRAINT MEMBER_ATTACH_FK FOREIGN KEY ( MEM_NO )
 REFERENCES MEMBER ( MEM_NO );



CREATE TABLE MESSAGE
(
    MSG_TYPE    NUMBER DEFAULT 2 NOT NULL,
    MSG_TXT    VARCHAR2(4000) NOT NULL,
    MSG_NO    NUMBER(2) NOT NULL,
    PJT_NO    NUMBER NOT NULL,
    MSG_TO    NUMBER NOT NULL,
    MSG_FROM    NUMBER NOT NULL,
    MSG_DEL_YN    VARCHAR2(2) DEFAULT 'N' NOT NULL
);

COMMENT ON COLUMN MESSAGE.MSG_TYPE IS '분류';

COMMENT ON COLUMN MESSAGE.MSG_TXT IS '내용';

COMMENT ON COLUMN MESSAGE.MSG_NO IS '쪽지번호';

COMMENT ON COLUMN MESSAGE.PJT_NO IS '프로젝트번호';

COMMENT ON COLUMN MESSAGE.MSG_TO IS '받은사람';

COMMENT ON COLUMN MESSAGE.MSG_FROM IS '보낸사람';

COMMENT ON COLUMN MESSAGE.MSG_DEL_YN IS '삭제여부';

COMMENT ON TABLE MESSAGE IS '쪽지';

CREATE UNIQUE INDEX 엔터티1_PK22 ON MESSAGE
( MSG_NO );

ALTER TABLE MESSAGE
 ADD CONSTRAINT MESSAGE_PK PRIMARY KEY ( MSG_NO )
 USING INDEX 엔터티1_PK22;

ALTER TABLE MESSAGE
 ADD CONSTRAINT MESSAGE_CK CHECK ( MSG_TYPE IN (1,2) );

ALTER TABLE MESSAGE
 ADD CONSTRAINT MESSAGE_CK1 CHECK ( MSG_DEL_YN IN ('Y','N') );

ALTER TABLE MESSAGE
 ADD CONSTRAINT MESSAGE_FK1 FOREIGN KEY ( PJT_NO )
 REFERENCES MEMBER ( MEM_NO );

ALTER TABLE MESSAGE
 ADD CONSTRAINT MESSAGE_FK2 FOREIGN KEY ( MSG_TO )
 REFERENCES MEMBER ( MEM_NO );

ALTER TABLE MESSAGE
 ADD CONSTRAINT MESSAGE_FK3 FOREIGN KEY ( MSG_FROM )
 REFERENCES MEMBER ( MEM_NO );




CREATE TABLE PJT_AUTHORITY
(
    PA_ROLE    NUMBER DEFAULT 2 NOT NULL,
    PJT_NO    NUMBER NOT NULL,
    MEM_NO    NUMBER NOT NULL,
    PA_NO    NUMBER NOT NULL
);

COMMENT ON COLUMN PJT_AUTHORITY.PA_ROLE IS '회원권한';

COMMENT ON COLUMN PJT_AUTHORITY.PJT_NO IS '프로젝트번호';

COMMENT ON COLUMN PJT_AUTHORITY.MEM_NO IS '회원번호';

COMMENT ON COLUMN PJT_AUTHORITY.PA_NO IS '권한 고유 번호';

COMMENT ON TABLE PJT_AUTHORITY IS '프로젝트 권한';

CREATE UNIQUE INDEX 엔터티1_PK15 ON PJT_AUTHORITY
( PA_NO );

ALTER TABLE PJT_AUTHORITY
 ADD CONSTRAINT PA_PK PRIMARY KEY ( PA_NO )
 USING INDEX 엔터티1_PK15;

ALTER TABLE PJT_AUTHORITY
 ADD CONSTRAINT TEAM_MEMBER_CK CHECK ( PA_ROLE IN (1,2,3,4) );

ALTER TABLE PJT_AUTHORITY
 ADD CONSTRAINT PJT_AUTHORITY_FK1 FOREIGN KEY ( PJT_NO )
 REFERENCES PROJECT ( PJT_NO );

ALTER TABLE PJT_AUTHORITY
 ADD CONSTRAINT PJT_AUTHORITY_FK2 FOREIGN KEY ( MEM_NO )
 REFERENCES MEMBER ( MEM_NO );



CREATE TABLE PROJECT_HISTORY
(
    PJT_NO    NUMBER NOT NULL,
    PJT_NAME    VARCHAR2(255) NOT NULL,
    UPDATE_DATE    DATE NOT NULL,
    PJT_DEL_YN    VARCHAR2(2) DEFAULT 'N' NOT NULL,
    PJT_HIS_NO    NUMBER NOT NULL
);

COMMENT ON COLUMN PROJECT_HISTORY.PJT_NO IS '프로젝트번호';

COMMENT ON COLUMN PROJECT_HISTORY.PJT_NAME IS '프로젝트제목';

COMMENT ON COLUMN PROJECT_HISTORY.UPDATE_DATE IS '변경일자';

COMMENT ON COLUMN PROJECT_HISTORY.PJT_DEL_YN IS '삭제여부';

COMMENT ON COLUMN PROJECT_HISTORY.PJT_HIS_NO IS '프로젝트이력번호';

COMMENT ON TABLE PROJECT_HISTORY IS '프로젝트변경이력';

CREATE UNIQUE INDEX 엔터티1_1_PK1 ON PROJECT_HISTORY
( PJT_HIS_NO );

ALTER TABLE PROJECT_HISTORY
 ADD CONSTRAINT PJT_HIS_PK PRIMARY KEY ( PJT_HIS_NO )
 USING INDEX 엔터티1_1_PK1;

ALTER TABLE PROJECT_HISTORY
 ADD CONSTRAINT PROJECT_HISTORY_FK FOREIGN KEY ( PJT_NO )
 REFERENCES PROJECT ( PJT_NO );


CREATE TABLE REF_TABLE
(
    REF_TABLE_NAME  VARCHAR2(255) NOT NULL,
    REF_TABLE_CODE NUMBER NOT NULL
);

COMMENT ON COLUMN REF_TABLE.REF_TABLE_NAME IS '테이블명';

COMMENT ON COLUMN REF_TABLE.REF_TABLE_CODE IS '테이블코드';

COMMENT ON TABLE REF_TABLE IS '참조테이블';


CREATE TABLE REPLY
(
    RE_NO    NUMBER NOT NULL,
    MEM_NO    NUMBER NOT NULL,
    RE_ENROLL_DATE    DATE DEFAULT SYSDATE NOT NULL,
    RE_TXT    VARCHAR2(1000) NOT NULL,
    RE_DEL_YN    VARCHAR2(2) DEFAULT 'N' NOT NULL
);

COMMENT ON COLUMN REPLY.RE_NO IS '댓글번호';

COMMENT ON COLUMN REPLY.MEM_NO IS '회원번호';

COMMENT ON COLUMN REPLY.RE_ENROLL_DATE IS '작성일자';

COMMENT ON COLUMN REPLY.RE_TXT IS '작성내용';

COMMENT ON COLUMN REPLY.RE_DEL_YN IS '삭제여부';

COMMENT ON TABLE REPLY IS '댓글';

CREATE UNIQUE INDEX 엔터티1_PK18 ON REPLY
( RE_NO );

ALTER TABLE REPLY
 ADD CONSTRAINT REPLY_PK PRIMARY KEY ( RE_NO )
 USING INDEX 엔터티1_PK18;

ALTER TABLE REPLY
 ADD CONSTRAINT REPLY_FK FOREIGN KEY ( MEM_NO )
 REFERENCES MEMBER ( MEM_NO );



CREATE TABLE REPLY_HISTORY
(
    RE_NO    NUMBER NOT NULL,
    MEM_NO    NUMBER NOT NULL,
    UPDATE_DATE    DATE DEFAULT SYSDATE NOT NULL,
    RE_TXT    VARCHAR2(1000) NOT NULL,
    RE_DEL_YN    VARCHAR2(2) DEFAULT 'N' NOT NULL
);

COMMENT ON COLUMN REPLY_HISTORY.RE_NO IS '댓글번호';

COMMENT ON COLUMN REPLY_HISTORY.MEM_NO IS '회원번호';

COMMENT ON COLUMN REPLY_HISTORY.UPDATE_DATE IS '변경일자';

COMMENT ON COLUMN REPLY_HISTORY.RE_TXT IS '작성내용';

COMMENT ON COLUMN REPLY_HISTORY.RE_DEL_YN IS '삭제여부';

COMMENT ON TABLE REPLY_HISTORY IS '댓글_이력';

ALTER TABLE REPLY_HISTORY
 ADD CONSTRAINT REPLY_HISTORY_FK FOREIGN KEY ( RE_NO )
 REFERENCES REPLY ( RE_NO );


CREATE TABLE REVIEW
(
    REVIEW_LIKE_TXT    VARCHAR2(4000) NOT NULL,
    REVIEW_LEARN_TXT    VARCHAR2(4000) NOT NULL,
    REVIEW_MISS_TXT    VARCHAR2(4000) NOT NULL,
    REVIEW_NO    NUMBER NOT NULL,
    SPR_NO    NUMBER NOT NULL,
    MEM_NO    NUMBER NOT NULL
);

COMMENT ON COLUMN REVIEW.REVIEW_LIKE_TXT IS '만족스러웠던 점';

COMMENT ON COLUMN REVIEW.REVIEW_LEARN_TXT IS '깨달았거나배웠던점';

COMMENT ON COLUMN REVIEW.REVIEW_MISS_TXT IS '놓쳤거나부족했던점';

COMMENT ON COLUMN REVIEW.REVIEW_NO IS '회고번호';

COMMENT ON COLUMN REVIEW.SPR_NO IS '스프린트번호';

COMMENT ON COLUMN REVIEW.MEM_NO IS '회원번호';

COMMENT ON TABLE REVIEW IS '회고록';

CREATE UNIQUE INDEX 엔터티1_PK16 ON REVIEW
( REVIEW_NO );

ALTER TABLE REVIEW
 ADD CONSTRAINT REVIEW_PK PRIMARY KEY ( REVIEW_NO )
 USING INDEX 엔터티1_PK16;

ALTER TABLE REVIEW
 ADD CONSTRAINT REVIEW_FK1 FOREIGN KEY ( SPR_NO )
 REFERENCES SPRINT ( SPR_NO );

ALTER TABLE REVIEW
 ADD CONSTRAINT REVIEW_FK2 FOREIGN KEY ( MEM_NO )
 REFERENCES MEMBER ( MEM_NO );


CREATE TABLE REVIEW_HISTORY
(
    REVIEW_LIKE_TXT    VARCHAR2(4000) NOT NULL,
    REVIEW_LEARN_TXT    VARCHAR2(4000) NOT NULL,
    REVIEW_MISS_TXT    VARCHAR2(4000) NOT NULL,
    UPDATE_DATE    DATE NOT NULL,
    REVIEW_NO    NUMBER NOT NULL
);

COMMENT ON COLUMN REVIEW_HISTORY.REVIEW_LIKE_TXT IS '만족스러웠던 점';

COMMENT ON COLUMN REVIEW_HISTORY.REVIEW_LEARN_TXT IS '깨달았거나배웠던점';

COMMENT ON COLUMN REVIEW_HISTORY.REVIEW_MISS_TXT IS '놓쳤거나부족했던점';

COMMENT ON COLUMN REVIEW_HISTORY.UPDATE_DATE IS '변경일자';

COMMENT ON COLUMN REVIEW_HISTORY.REVIEW_NO IS '회고번호';

COMMENT ON TABLE REVIEW_HISTORY IS '회고록변경이력';

ALTER TABLE REVIEW_HISTORY
 ADD CONSTRAINT REVIEW_HISTORY_FK FOREIGN KEY ( REVIEW_NO )
 REFERENCES REVIEW( REVIEW_NO );




CREATE TABLE SPRINT_HISTORY
(
    SPR_NO    NUMBER NOT NULL,
    SPR_NAME    VARCHAR2(255) NOT NULL,
    SPR_GOAL    VARCHAR2(255) NOT NULL,
    UPDATE_DATE    DATE NOT NULL,
    SPR_DEL_YN    VARCHAR2(2) DEFAULT 'N' NOT NULL,
    SPR_HIS_NO    NUMBER NOT NULL
);

COMMENT ON COLUMN SPRINT_HISTORY.SPR_NO IS '스프린트번호';

COMMENT ON COLUMN SPRINT_HISTORY.SPR_NAME IS '스프린트이름';

COMMENT ON COLUMN SPRINT_HISTORY.SPR_GOAL IS '스프린트목표';

COMMENT ON COLUMN SPRINT_HISTORY.UPDATE_DATE IS '변경일자';

COMMENT ON COLUMN SPRINT_HISTORY.SPR_DEL_YN IS '삭제여부';

COMMENT ON COLUMN SPRINT_HISTORY.SPR_HIS_NO IS '스프린트이력번호';

COMMENT ON TABLE SPRINT_HISTORY IS '스프린트변경이력';

CREATE UNIQUE INDEX 엔터티1_1_1_PK2 ON SPRINT_HISTORY
( SPR_HIS_NO );

ALTER TABLE SPRINT_HISTORY
 ADD CONSTRAINT SPRINT_HIS_PK PRIMARY KEY ( SPR_HIS_NO )
 USING INDEX 엔터티1_1_1_PK2;

ALTER TABLE SPRINT_HISTORY
 ADD CONSTRAINT SPRINT_HISTORY_FK FOREIGN KEY ( SPR_NO )
 REFERENCES SPRINT( SPR_NO );

CREATE TABLE TM_HISTORY
(
    PA_ROLE    NUMBER NOT NULL,
    UPDATE_DATE    DATE NOT NULL,
    PA_NO    NUMBER NOT NULL
);

COMMENT ON COLUMN TM_HISTORY.PA_ROLE IS '회원권한';

COMMENT ON COLUMN TM_HISTORY.UPDATE_DATE IS '변경일자';

COMMENT ON COLUMN TM_HISTORY.PA_NO IS '권한 고유 번호';

COMMENT ON TABLE TM_HISTORY IS '권한 이력';


/* @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/
/* @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/
/* @@@@@@@@@@@@@@@@@@@@@@@@@@@@@ 시퀀스 생성 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/
/* @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/
/* @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/

CREATE SEQUENCE SEQ_ALT_NO
INCREMENT BY 1
START WITH 1
MINVALUE  1
MAXVALUE 1000
NOCYCLE ;

CREATE SEQUENCE SEQ_BLG_NO
INCREMENT BY 1
START WITH 1
MINVALUE  1
MAXVALUE 1000
NOCYCLE ;

CREATE SEQUENCE SEQ_BRD_NO
INCREMENT BY 1
START WITH 1
MINVALUE  1
MAXVALUE 1000
NOCYCLE ;

CREATE SEQUENCE SEQ_CRD_NO
INCREMENT BY 1
START WITH 1
MINVALUE  1
MAXVALUE 1000
NOCYCLE ;

CREATE SEQUENCE SEQ_MEET_NO
INCREMENT BY 1
START WITH 1
MINVALUE  1
MAXVALUE 1000
NOCYCLE ;


CREATE SEQUENCE SEQ_MEM_NO
INCREMENT BY 1
START WITH 1
MINVALUE  1
MAXVALUE 1000
NOCYCLE ;

CREATE SEQUENCE SEQ_MSG_NO
INCREMENT BY 1
START WITH 1
MINVALUE  1
MAXVALUE 1000
NOCYCLE ;

CREATE SEQUENCE SEQ_PA_NO
INCREMENT BY 1
START WITH 1
MINVALUE  1
MAXVALUE 1000
NOCYCLE ;

CREATE SEQUENCE SEQ_PJT_NO
INCREMENT BY 1
START WITH 1
MINVALUE  1
MAXVALUE 1000
NOCYCLE ;


CREATE SEQUENCE SEQ_RE_NO
INCREMENT BY 1
START WITH 1
MINVALUE  1
MAXVALUE 1000
NOCYCLE ;


CREATE SEQUENCE SEQ_REVIEW_NO
INCREMENT BY 1
START WITH 1
MINVALUE  1
MAXVALUE 1000
NOCYCLE ;

CREATE SEQUENCE SEQ_SPR_NO
INCREMENT BY 1
START WITH 1
MINVALUE  1
MAXVALUE 1000
NOCYCLE ;


commit;

-- 임시 회원 shortcut/shortcut
INSERT INTO MEMBER
( MEM_ID, MEM_PWD, MEM_NAME, PHONE, SIGNUP_DATE, MEM_NO, WITHDRAW_YN )VALUES
( 'shortcut', '$2a$10$xKClCyJoXskdmnQGFNqoue5Ekvlgiq4hB2NmysEf8MWAoah3hXbw6', 'shortcut', '01012345678', SYSDATE, SEQ_MEM_NO.NEXTVAL, 'N' );
COMMIT;
-- 임시 프로젝트 2개
INSERT INTO PROJECT
( PJT_NO, PJT_NAME, PJT_START_DATE, PJT_DEL_YN, MEM_NO, PJT_END_DATE, PJT_COLOR )VALUES
( SEQ_PJT_NO.NEXTVAL, 'PJOJECT1', SYSDATE, 'N', 1, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, +1), 'YYYY-MM-DD')), '#FFD9EC' );
INSERT INTO PROJECT
( PJT_NO, PJT_NAME, PJT_START_DATE, PJT_DEL_YN, MEM_NO, PJT_END_DATE, PJT_COLOR )VALUES
( SEQ_PJT_NO.NEXTVAL, 'PJOJECT2', SYSDATE, 'N', 1, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, +1), 'YYYY-MM-DD')), '#D4F4FA' );
COMMIT;
-- 임시 백로그 7개
INSERT INTO BACKLOG
( BLG_NO, BLG_NAME, BLG_PRI, BLG_ENROLL_DATE, PJT_NO, BLG_DEL_YN, BLG_DEMO_MEMO, BLG_REF_MEMO )VALUES
( SEQ_BLG_NO.NEXTVAL, 'BACKLOG1-1', 1, SYSDATE, 1, 'N', '테스트 데모 방식1', '테스트 참고 1' );
INSERT INTO BACKLOG
( BLG_NO, BLG_NAME, BLG_PRI, BLG_ENROLL_DATE, PJT_NO, BLG_DEL_YN, BLG_DEMO_MEMO, BLG_REF_MEMO )VALUES
( SEQ_BLG_NO.NEXTVAL, 'BACKLOG1-2', 2, SYSDATE, 1, 'N', '테스트 데모 방식2', '테스트 참고 2' );
INSERT INTO BACKLOG
( BLG_NO, BLG_NAME, BLG_PRI, BLG_ENROLL_DATE, PJT_NO, BLG_DEL_YN, BLG_DEMO_MEMO, BLG_REF_MEMO )VALUES
( SEQ_BLG_NO.NEXTVAL, 'BACKLOG1-3', 3, SYSDATE, 1, 'N', '테스트 데모 방식3', '테스트 참고 3' );
INSERT INTO BACKLOG
( BLG_NO, BLG_NAME, BLG_PRI, BLG_ENROLL_DATE, PJT_NO, BLG_DEL_YN, BLG_DEMO_MEMO, BLG_REF_MEMO )VALUES
( SEQ_BLG_NO.NEXTVAL, 'BACKLOG2-1', 1, SYSDATE, 2, 'N', '테스트 데모 방식4', '테스트 참고 4' );
INSERT INTO BACKLOG
( BLG_NO, BLG_NAME, BLG_PRI, BLG_ENROLL_DATE, PJT_NO, BLG_DEL_YN, BLG_DEMO_MEMO, BLG_REF_MEMO )VALUES
( SEQ_BLG_NO.NEXTVAL, 'BACKLOG2-2', 2, SYSDATE, 2, 'N', '테스트 데모 방식5', '테스트 참고 5' );
INSERT INTO BACKLOG
( BLG_NO, BLG_NAME, BLG_PRI, BLG_ENROLL_DATE, PJT_NO, BLG_DEL_YN, BLG_DEMO_MEMO, BLG_REF_MEMO )VALUES
( SEQ_BLG_NO.NEXTVAL, 'BACKLOG2-3', 3, SYSDATE, 2, 'N', '테스트 데모 방식6', '테스트 참고 6' );
INSERT INTO BACKLOG
( BLG_NO, BLG_NAME, BLG_PRI, BLG_ENROLL_DATE, PJT_NO, BLG_DEL_YN, BLG_DEMO_MEMO, BLG_REF_MEMO )VALUES
( SEQ_BLG_NO.NEXTVAL, 'BACKLOG2-4', 1, SYSDATE, 2, 'N', '테스트 데모 방식7', '테스트 참고 7' );
COMMIT;
-- 임시 스프린트 7개
INSERT INTO SPRINT
( SPR_NO, SPR_NAME, SPR_START_DATE, SPR_END_DATE, SPR_GOAL, SPR_DEL_YN, BLG_NO )VALUES
( SEQ_SPR_NO.NEXTVAL, 'SPRINT1-1', SYSDATE, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 10, '테스트 스프린트 목표1', 'N', 1);
INSERT INTO SPRINT
( SPR_NO, SPR_NAME, SPR_START_DATE, SPR_END_DATE, SPR_GOAL, SPR_DEL_YN, BLG_NO )VALUES
( SEQ_SPR_NO.NEXTVAL, 'SPRINT1-2', TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 10, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 20, '테스트 스프린트 목표2', 'N', 2);
INSERT INTO SPRINT
( SPR_NO, SPR_NAME, SPR_START_DATE, SPR_END_DATE, SPR_GOAL, SPR_DEL_YN, BLG_NO )VALUES
( SEQ_SPR_NO.NEXTVAL, 'SPRINT1-3', TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 20, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 30, '테스트 스프린트 목표3', 'N', 3);
INSERT INTO SPRINT
( SPR_NO, SPR_NAME, SPR_START_DATE, SPR_END_DATE, SPR_GOAL, SPR_DEL_YN, BLG_NO )VALUES
( SEQ_SPR_NO.NEXTVAL, 'SPRINT2-1', SYSDATE, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 7, '테스트 스프린트 목표4', 'N', 4);
INSERT INTO SPRINT
( SPR_NO, SPR_NAME, SPR_START_DATE, SPR_END_DATE, SPR_GOAL, SPR_DEL_YN, BLG_NO )VALUES
( SEQ_SPR_NO.NEXTVAL, 'SPRINT2-2', TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 7, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 14, '테스트 스프린트 목표5', 'N', 5);
INSERT INTO SPRINT
( SPR_NO, SPR_NAME, SPR_START_DATE, SPR_END_DATE, SPR_GOAL, SPR_DEL_YN, BLG_NO )VALUES
( SEQ_SPR_NO.NEXTVAL, 'SPRINT2-3', TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 14, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 21, '테스트 스프린트 목표6', 'N', 6);
INSERT INTO SPRINT
( SPR_NO, SPR_NAME, SPR_START_DATE, SPR_END_DATE, SPR_GOAL, SPR_DEL_YN, BLG_NO )VALUES
( SEQ_SPR_NO.NEXTVAL, 'SPRINT2-4', TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 21, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 28, '테스트 스프린트 목표7', 'N', 7);
COMMIT;
-- 임시 보드 7개
INSERT INTO BOARD
( BRD_NO, BRD_NAME, BRD_ENROLL_DATE, SPR_NO, BRD_DEL_YN, BRD_ORDER )VALUES
( SEQ_BRD_NO.NEXTVAL, 'BOARD1', SYSDATE, 1, 'N', 1);
INSERT INTO BOARD
( BRD_NO, BRD_NAME, BRD_ENROLL_DATE, SPR_NO, BRD_DEL_YN, BRD_ORDER )VALUES
( SEQ_BRD_NO.NEXTVAL, 'BOARD2', SYSDATE, 2, 'N', 1);
INSERT INTO BOARD
( BRD_NO, BRD_NAME, BRD_ENROLL_DATE, SPR_NO, BRD_DEL_YN, BRD_ORDER )VALUES
( SEQ_BRD_NO.NEXTVAL, 'BOARD3', SYSDATE, 3, 'N', 1);
INSERT INTO BOARD
( BRD_NO, BRD_NAME, BRD_ENROLL_DATE, SPR_NO, BRD_DEL_YN, BRD_ORDER )VALUES
( SEQ_BRD_NO.NEXTVAL, 'BOARD4', SYSDATE, 4, 'N', 1);
INSERT INTO BOARD
( BRD_NO, BRD_NAME, BRD_ENROLL_DATE, SPR_NO, BRD_DEL_YN, BRD_ORDER )VALUES
( SEQ_BRD_NO.NEXTVAL, 'BOARD5', SYSDATE, 5, 'N', 1);
INSERT INTO BOARD
( BRD_NO, BRD_NAME, BRD_ENROLL_DATE, SPR_NO, BRD_DEL_YN, BRD_ORDER )VALUES
( SEQ_BRD_NO.NEXTVAL, 'BOARD6', SYSDATE, 6, 'N', 1);
INSERT INTO BOARD
( BRD_NO, BRD_NAME, BRD_ENROLL_DATE, SPR_NO, BRD_DEL_YN, BRD_ORDER )VALUES
( SEQ_BRD_NO.NEXTVAL, 'BOARD7', SYSDATE, 7, 'N', 1);
COMMIT;
-- 카드 21개
INSERT INTO CARD
( CRD_NO, CRD_NAME, CRD_ENROLL_DATE, CRD_DEL_NO, BRD_NO, CRD_ORDER, CRD_TYPE, MEM_NO, CRD_TXT )VALUES
( SEQ_CRD_NO.NEXTVAL, 'CARD1-1', SYSDATE, 'N', 1, 1, 2, 1, '테스트 카드 내용1');
INSERT INTO CARD
( CRD_NO, CRD_NAME, CRD_ENROLL_DATE, CRD_DEL_NO, BRD_NO, CRD_ORDER, CRD_TYPE, MEM_NO, CRD_TXT )VALUES
( SEQ_CRD_NO.NEXTVAL, 'CARD1-2', SYSDATE, 'N', 1, 2, 2, 1, '테스트 카드 내용2');
INSERT INTO CARD
( CRD_NO, CRD_NAME, CRD_ENROLL_DATE, CRD_DEL_NO, BRD_NO, CRD_ORDER, CRD_TYPE, MEM_NO, CRD_TXT )VALUES
( SEQ_CRD_NO.NEXTVAL, 'CARD1-3', SYSDATE, 'N', 1, 3, 2, 1, '테스트 카드 내용3');

INSERT INTO CARD
( CRD_NO, CRD_NAME, CRD_ENROLL_DATE, CRD_DEL_NO, BRD_NO, CRD_ORDER, CRD_TYPE, MEM_NO, CRD_TXT )VALUES
( SEQ_CRD_NO.NEXTVAL, 'CARD2-1', SYSDATE, 'N', 2, 1, 2, 1, '테스트 카드 내용4');
INSERT INTO CARD
( CRD_NO, CRD_NAME, CRD_ENROLL_DATE, CRD_DEL_NO, BRD_NO, CRD_ORDER, CRD_TYPE, MEM_NO, CRD_TXT )VALUES
( SEQ_CRD_NO.NEXTVAL, 'CARD2-2', SYSDATE, 'N', 2, 2, 2, 1, '테스트 카드 내용5');
INSERT INTO CARD
( CRD_NO, CRD_NAME, CRD_ENROLL_DATE, CRD_DEL_NO, BRD_NO, CRD_ORDER, CRD_TYPE, MEM_NO, CRD_TXT )VALUES
( SEQ_CRD_NO.NEXTVAL, 'CARD2-3', SYSDATE, 'N', 2, 3, 2, 1, '테스트 카드 내용6');

INSERT INTO CARD
( CRD_NO, CRD_NAME, CRD_ENROLL_DATE, CRD_DEL_NO, BRD_NO, CRD_ORDER, CRD_TYPE, MEM_NO, CRD_TXT )VALUES
( SEQ_CRD_NO.NEXTVAL, 'CARD3-1', SYSDATE, 'N', 3, 1, 2, 1, '테스트 카드 내용7');
INSERT INTO CARD
( CRD_NO, CRD_NAME, CRD_ENROLL_DATE, CRD_DEL_NO, BRD_NO, CRD_ORDER, CRD_TYPE, MEM_NO, CRD_TXT )VALUES
( SEQ_CRD_NO.NEXTVAL, 'CARD3-2', SYSDATE, 'N', 3, 2, 2, 1, '테스트 카드 내용8');
INSERT INTO CARD
( CRD_NO, CRD_NAME, CRD_ENROLL_DATE, CRD_DEL_NO, BRD_NO, CRD_ORDER, CRD_TYPE, MEM_NO, CRD_TXT )VALUES
( SEQ_CRD_NO.NEXTVAL, 'CARD3-3', SYSDATE, 'N', 3, 3, 2, 1, '테스트 카드 내용9');

INSERT INTO CARD
( CRD_NO, CRD_NAME, CRD_ENROLL_DATE, CRD_DEL_NO, BRD_NO, CRD_ORDER, CRD_TYPE, MEM_NO, CRD_TXT )VALUES
( SEQ_CRD_NO.NEXTVAL, 'CARD4-1', SYSDATE, 'N', 4, 1, 2, 1, '테스트 카드 내용10');
INSERT INTO CARD
( CRD_NO, CRD_NAME, CRD_ENROLL_DATE, CRD_DEL_NO, BRD_NO, CRD_ORDER, CRD_TYPE, MEM_NO, CRD_TXT )VALUES
( SEQ_CRD_NO.NEXTVAL, 'CARD4-2', SYSDATE, 'N', 4, 2, 2, 1, '테스트 카드 내용11');
INSERT INTO CARD
( CRD_NO, CRD_NAME, CRD_ENROLL_DATE, CRD_DEL_NO, BRD_NO, CRD_ORDER, CRD_TYPE, MEM_NO, CRD_TXT )VALUES
( SEQ_CRD_NO.NEXTVAL, 'CARD4-3', SYSDATE, 'N', 4, 3, 2, 1, '테스트 카드 내용12');

INSERT INTO CARD
( CRD_NO, CRD_NAME, CRD_ENROLL_DATE, CRD_DEL_NO, BRD_NO, CRD_ORDER, CRD_TYPE, MEM_NO, CRD_TXT )VALUES
( SEQ_CRD_NO.NEXTVAL, 'CARD5-1', SYSDATE, 'N', 5, 1, 2, 1, '테스트 카드 내용13');
INSERT INTO CARD
( CRD_NO, CRD_NAME, CRD_ENROLL_DATE, CRD_DEL_NO, BRD_NO, CRD_ORDER, CRD_TYPE, MEM_NO, CRD_TXT )VALUES
( SEQ_CRD_NO.NEXTVAL, 'CARD5-2', SYSDATE, 'N', 5, 2, 2, 1, '테스트 카드 내용14');
INSERT INTO CARD
( CRD_NO, CRD_NAME, CRD_ENROLL_DATE, CRD_DEL_NO, BRD_NO, CRD_ORDER, CRD_TYPE, MEM_NO, CRD_TXT )VALUES
( SEQ_CRD_NO.NEXTVAL, 'CARD5-3', SYSDATE, 'N', 5, 3, 2, 1, '테스트 카드 내용15');

INSERT INTO CARD
( CRD_NO, CRD_NAME, CRD_ENROLL_DATE, CRD_DEL_NO, BRD_NO, CRD_ORDER, CRD_TYPE, MEM_NO, CRD_TXT )VALUES
( SEQ_CRD_NO.NEXTVAL, 'CARD6-1', SYSDATE, 'N', 6, 1, 2, 1, '테스트 카드 내용16');
INSERT INTO CARD
( CRD_NO, CRD_NAME, CRD_ENROLL_DATE, CRD_DEL_NO, BRD_NO, CRD_ORDER, CRD_TYPE, MEM_NO, CRD_TXT )VALUES
( SEQ_CRD_NO.NEXTVAL, 'CARD6-2', SYSDATE, 'N', 6, 2, 2, 1, '테스트 카드 내용17');
INSERT INTO CARD
( CRD_NO, CRD_NAME, CRD_ENROLL_DATE, CRD_DEL_NO, BRD_NO, CRD_ORDER, CRD_TYPE, MEM_NO, CRD_TXT )VALUES
( SEQ_CRD_NO.NEXTVAL, 'CARD6-3', SYSDATE, 'N', 6, 3, 2, 1, '테스트 카드 내용18');

INSERT INTO CARD
( CRD_NO, CRD_NAME, CRD_ENROLL_DATE, CRD_DEL_NO, BRD_NO, CRD_ORDER, CRD_TYPE, MEM_NO, CRD_TXT )VALUES
( SEQ_CRD_NO.NEXTVAL, 'CARD7-1', SYSDATE, 'N', 7, 1, 2, 1, '테스트 카드 내용19');
INSERT INTO CARD
( CRD_NO, CRD_NAME, CRD_ENROLL_DATE, CRD_DEL_NO, BRD_NO, CRD_ORDER, CRD_TYPE, MEM_NO, CRD_TXT )VALUES
( SEQ_CRD_NO.NEXTVAL, 'CARD7-2', SYSDATE, 'N', 7, 2, 2, 1, '테스트 카드 내용20');
INSERT INTO CARD
( CRD_NO, CRD_NAME, CRD_ENROLL_DATE, CRD_DEL_NO, BRD_NO, CRD_ORDER, CRD_TYPE, MEM_NO, CRD_TXT )VALUES
( SEQ_CRD_NO.NEXTVAL, 'CARD7-3', SYSDATE, 'N', 7, 3, 2, 1, '테스트 카드 내용21');
COMMIT;
-- 임시 카드에 업무 추가 21개
INSERT INTO CRD_TASK
( TK_PROGRESS, CRD_NO, MEM_NO, TK_START_DATE, TK_END_DATE)VALUES
( 2, 1, 1, SYSDATE, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 3);
INSERT INTO CRD_TASK
( TK_PROGRESS, CRD_NO, MEM_NO, TK_START_DATE, TK_END_DATE)VALUES
( 2, 2, 1, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 3, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 6);
INSERT INTO CRD_TASK
( TK_PROGRESS, CRD_NO, MEM_NO, TK_START_DATE, TK_END_DATE)VALUES
( 2, 3, 1, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 6, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 9);

INSERT INTO CRD_TASK
( TK_PROGRESS, CRD_NO, MEM_NO, TK_START_DATE, TK_END_DATE)VALUES
( 2, 4, 1, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 10, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 13);
INSERT INTO CRD_TASK
( TK_PROGRESS, CRD_NO, MEM_NO, TK_START_DATE, TK_END_DATE)VALUES
( 2, 5, 1, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 13, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 16);
INSERT INTO CRD_TASK
( TK_PROGRESS, CRD_NO, MEM_NO, TK_START_DATE, TK_END_DATE)VALUES
( 2, 6, 1, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 16, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 19);

INSERT INTO CRD_TASK
( TK_PROGRESS, CRD_NO, MEM_NO, TK_START_DATE, TK_END_DATE)VALUES
( 2, 7, 1, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 20, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 23);
INSERT INTO CRD_TASK
( TK_PROGRESS, CRD_NO, MEM_NO, TK_START_DATE, TK_END_DATE)VALUES
( 2, 8, 1, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 23, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 26);
INSERT INTO CRD_TASK
( TK_PROGRESS, CRD_NO, MEM_NO, TK_START_DATE, TK_END_DATE)VALUES
( 2, 9, 1, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 26, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 29);

INSERT INTO CRD_TASK
( TK_PROGRESS, CRD_NO, MEM_NO, TK_START_DATE, TK_END_DATE)VALUES
( 2, 10, 1, SYSDATE, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 2);
INSERT INTO CRD_TASK
( TK_PROGRESS, CRD_NO, MEM_NO, TK_START_DATE, TK_END_DATE)VALUES
( 2, 11, 1, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 2, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 4);
INSERT INTO CRD_TASK
( TK_PROGRESS, CRD_NO, MEM_NO, TK_START_DATE, TK_END_DATE)VALUES
( 2, 12, 1, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 4, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 6);

INSERT INTO CRD_TASK
( TK_PROGRESS, CRD_NO, MEM_NO, TK_START_DATE, TK_END_DATE)VALUES
( 2, 13, 1, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 7, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 9);
INSERT INTO CRD_TASK
( TK_PROGRESS, CRD_NO, MEM_NO, TK_START_DATE, TK_END_DATE)VALUES
( 2, 14, 1, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 9, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 11);
INSERT INTO CRD_TASK
( TK_PROGRESS, CRD_NO, MEM_NO, TK_START_DATE, TK_END_DATE)VALUES
( 2, 15, 1, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 11, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 13);

INSERT INTO CRD_TASK
( TK_PROGRESS, CRD_NO, MEM_NO, TK_START_DATE, TK_END_DATE)VALUES
( 2, 16, 1, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 14, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 16);
INSERT INTO CRD_TASK
( TK_PROGRESS, CRD_NO, MEM_NO, TK_START_DATE, TK_END_DATE)VALUES
( 2, 17, 1, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 16, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 18);
INSERT INTO CRD_TASK
( TK_PROGRESS, CRD_NO, MEM_NO, TK_START_DATE, TK_END_DATE)VALUES
( 2, 18, 1, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 18, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 20);

INSERT INTO CRD_TASK
( TK_PROGRESS, CRD_NO, MEM_NO, TK_START_DATE, TK_END_DATE)VALUES
( 2, 19, 1, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 21, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 23);
INSERT INTO CRD_TASK
( TK_PROGRESS, CRD_NO, MEM_NO, TK_START_DATE, TK_END_DATE)VALUES
( 2, 20, 1, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 25, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 27);
INSERT INTO CRD_TASK
( TK_PROGRESS, CRD_NO, MEM_NO, TK_START_DATE, TK_END_DATE)VALUES
( 2, 21, 1, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 27, TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 0), 'YYYY-MM-DD')) + 29);
COMMIT;
